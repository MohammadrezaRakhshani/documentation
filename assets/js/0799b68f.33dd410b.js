"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3724],{2777:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"Plugins/Proccessors/Key Value Transformation","title":"Key Value Transformation","description":"Introduction","source":"@site/docs/Plugins/Proccessors/Key Value Transformation.md","sourceDirName":"Plugins/Proccessors","slug":"/Plugins/Proccessors/Key Value Transformation","permalink":"/documentation/docs/Plugins/Proccessors/Key Value Transformation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Js Plugin","permalink":"/documentation/docs/Plugins/Proccessors/Js Plugin"},"next":{"title":"Introduction","permalink":"/documentation/docs/Plugins/Proccessors/Mark Error"}}');var r=i(4848),s=i(8453);const a={},t=void 0,l={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Key-&gt;Value Transformation Plugin",id:"key-value-transformation-plugin",level:2},{value:"Action",id:"action",level:3},{value:"key-value",id:"key-value",level:4},{value:"Configuration",id:"configuration",level:3},{value:"Configuration Steps",id:"configuration-steps",level:4},{value:"Example Configuration",id:"example-configuration",level:3},{value:"Configuration Fields:",id:"configuration-fields",level:4},{value:"Example Usage",id:"example-usage",level:3},{value:"Configuration Input:",id:"configuration-input",level:4},{value:"Conclusion",id:"conclusion",level:3}];function c(e){const n={h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:'The WeHub Dashboard offers a variety of plugins to enhance and automate your workflows. These plugins are categorized into three types: Triggers, Processors, and Apps. This documentation provides an overview of the "Key->Value Transformation" plugin, which falls under the Processors category.'}),"\n",(0,r.jsx)(n.h2,{id:"key-value-transformation-plugin",children:"Key->Value Transformation Plugin"}),"\n",(0,r.jsx)(n.p,{children:'The "Key->Value Transformation" plugin is used to transform key-value pairs within your workflow. This plugin provides one action: key-value.'}),"\n",(0,r.jsx)(n.h3,{id:"action",children:"Action"}),"\n",(0,r.jsx)(n.h4,{id:"key-value",children:"key-value"}),"\n",(0,r.jsx)(n.p,{children:"Transform key-value pairs for use in the workflow."}),"\n",(0,r.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"When configuring the key-value action, you need to provide the following inputs:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Screenshot 2024-05-28 at 12.09.57.png",src:i(6309).A+"",width:"491",height:"513"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Label"}),": A descriptive label to identify this action within your workflow."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Type"}),": Select the data type (Types are: GUID, STRING, INTEGER, FLOAT, BOOL)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Value"}),": Input the value."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"configuration-steps",children:"Configuration Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Label"}),': Provide a meaningful label for this action. For example, "Transform Key-Value Pair".']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Type"}),": Select the data type from GUID, STRING, INTEGER, FLOAT, BOOL."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Value"}),": Input the value."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,r.jsx)(n.h4,{id:"configuration-fields",children:"Configuration Fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Label"}),": Transform Key-Value Pair"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Type"}),": STRING"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Value"}),": ExampleValue"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.p,{children:"Let's consider a scenario where you want to configure the key-value action to transform a key-value pair with a specific data type and value."}),"\n",(0,r.jsx)(n.h4,{id:"configuration-input",children:"Configuration Input:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Label"}),": Transform Key-Value Pair"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Type"}),": STRING"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Value"}),": ExampleValue"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"The Key->Value Transformation plugin in the WeHub Dashboard is a versatile tool for transforming key-value pairs within your workflows. By configuring the label, data type, and value, you can efficiently handle key-value transformations in various scenarios. Ensure to test and validate your configurations to achieve the desired workflow behavior."}),"\n",(0,r.jsx)(n.p,{children:"If you have any further questions or need additional assistance, please refer to the WeHub Dashboard support documentation or contact our support team."})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},6309:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/Key Value Transformation-62b5a25e75d89dfee7bfc15d223abcfb.png"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var o=i(6540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);